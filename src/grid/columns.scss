$grid-columns: 12 !default;
$auto-column-min-width: (
  xs: 8rem,
  sm: 10rem,
  md: 15rem,
  lg: 20rem,
  xl: 25rem,
);

@mixin auto-column-width($min-width) {
  display: grid;
  gap: $gap-mobile;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));

  @media (min-width: $screen-tablet) {
    gap: $gap;
  }
}

.#{$prefix}-row {
  display: grid;
  gap: $gap-mobile;
  grid-template-columns: repeat($grid-columns, 1fr);

  > * {
    grid-column-end: span $grid-columns;
  }

  @media (min-width: $screen-tablet) {
    gap: $gap;
  }
}

.#{$prefix}-auto-row {
  @include auto-column-width(0);
}

@each $size, $value in $auto-column-min-width {
  .#{$prefix}-auto-row-#{$size} {
    @include auto-column-width($value);
  }
}

@include mobile {
  @for $i from 1 through $grid-columns {
    $calculatedWidth: ($i * 100%) / $grid-columns;

    .#{$prefix}-col-#{$i}-mobile {
      grid-column-end: span #{$i};
    }
  }
}

@include tablet {
  @for $i from 1 through $grid-columns {
    $calculatedWidth: ($i * 100%) / $grid-columns;

    .#{$prefix}-col-#{$i}-tablet {
      grid-column-end: span #{$i};
    }
  }
}

@include desktop {
  @for $i from 1 through $grid-columns {
    $calculatedWidth: ($i * 100%) / $grid-columns;

    .#{$prefix}-col-#{$i}-desktop {
      grid-column-end: span #{$i};
    }
  }
}

@include desktop-lg {
  @for $i from 1 through $grid-columns {
    $calculatedWidth: ($i * 100%) / $grid-columns;

    .#{$prefix}-col-#{$i}-desktop-lg {
      grid-column-end: span #{$i};
    }
  }
}
